<?php
function multipleOf3UnderNumber(int $number)
{
    $i = 0;
    while ($i <= $number) {
        if ($i % 3 === 0) {
            echo $i . PHP_EOL;
        }
        $i++;
    }
}
function checkParityUnderNumber(int $number)
{
    $i = 0;
    do {
        echo $i;
        if ($i === 0) {
            echo ' – это ноль.' . PHP_EOL;
        } elseif ($i % 2 === 0) {
            echo ' – четное число.' . PHP_EOL;
        } else {
            echo ' – нечетное число.' . PHP_EOL;
        }
        $i++;
    } while ($i <= $number);
}

function listCitiesOfRegions(array $aRegions)
{
    foreach ($aRegions as $region => $aCities) {
        echo $region . PHP_EOL;
        if (is_array($aCities)) {
            echo implode(', ', $aCities) . PHP_EOL;
        }
    }
}

function transliteration(string $string) {
    $mapLetters = [
        'A' => 'A',
        'Б' => 'B',
        'В' => 'V',
        'Г' => 'G',
        'Д' => 'D',
        'Е' => 'Е',
        'Ё' => 'YO',
        'Ж' => 'ZH',
        'З' => 'Z',
        'И' => 'I',
        'Й' => 'Y',
        'К' => 'K',
        'Л' => 'L',
        'М' => 'M',
        'Н' => 'N',
        'О' => 'O',
        'П' => 'P',
        'Р' => 'R',
        'C' => 'S',
        'T' => 'T',
        'У' => 'U',
        'Ф' => 'F',
        'X' => 'KH',
        'Ц' => 'TS',
        'Ч' => 'CH',
        'Ш' => 'SH',
        'Щ' => 'SCH',
        'Ъ' => '',
        'Ы' => 'Y',
        'Ь' => '',
        'Э' => 'E',
        'Ю' => 'YU',
        'Я' => 'YA',
        'a' => 'a',
        'б' => 'b',
        'в' => 'v',
        'г' => 'g',
        'д' => 'd',
        'е' => 'е',
        'ё' => 'yo',
        'ж' => 'zh',
        'з' => 'z',
        'и' => 'i',
        'й' => 'y',
        'к' => 'k',
        'л' => 'l',
        'м' => 'm',
        'н' => 'n',
        'о' => 'o',
        'п' => 'p',
        'р' => 'r',
        'c' => 's',
        'т' => 't',
        'у' => 'u',
        'ф' => 'f',
        'x' => 'kh',
        'ц' => 'ts',
        'ч' => 'ch',
        'ш' => 'sh',
        'щ' => 'sch',
        'ъ' => '',
        'ы' => 'y',
        'ь' => '',
        'э' => 'e',
        'ю' => 'yu',
        'я' => 'ya',
    ];
    return str_replace(array_keys($mapLetters), array_values($mapLetters), $string);
}

function replaceSpaces(string $string) {
    return str_replace(' ', '_', $string);
}

function filterCitiesOfRegions(array $aRegions, string $firstLetter)
{
    foreach ($aRegions as $region => $aCities) {
        foreach ($aCities as $city) {
            if (mb_substr(mb_strtolower($city), 0, 1) === mb_strtolower($firstLetter)) {
                echo $city . PHP_EOL;
            }
        }
    }
}

function makeUrl(string $string) {
    return replaceSpaces(transliteration($string));
}


// 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.
multipleOf3UnderNumber(100);

/*
 * 2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
 * 0 – это ноль.
 * 1 – нечетное число.
 * 2 – четное число.
 * 3 – нечетное число.
 * …
 * 10 – четное число.
 */
checkParityUnderNumber(10);

/*
 * 3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области.
 * Вывести в цикле значения массива, чтобы результат был таким:
 * Московская область:
 * Москва, Зеленоград, Клин
 * Ленинградская область:
 * Санкт-Петербург, Всеволожск, Павловск, Кронштадт
 * Рязанская область … (названия городов можно найти на maps.yandex.ru)
 */
$aRegions = [
    'Московская область' => [
        'Москва',
        'Зеленоград',
        'Клин',
    ],
    'Ленинградская область' => [
        'Санкт-Петербург',
        'Всеволожск',
        'Павловск',
        'Кронштадт',
    ],
    'Рязанская область' => [
        'Рязань',
        'Касимов',
        'Скопин',
        'Сасово',
        'Ряжск',
        'Новомичуринск',
        'Рыбное',
        'Кораблино',
        'Михайлов',
        'Спасск-Рязанский',
        'Шацк',
        'Спас-Клепики',
    ],
];
listCitiesOfRegions($aRegions);

/*
 * 4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания
 * (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
 * Написать функцию транслитерации строк.
 */
echo(transliteration('Привет Мир!') . PHP_EOL);

//5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку.
 echo(replaceSpaces('Привет Мир как дела'). PHP_EOL);

//7. *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла:
for ($i = 0; $i <= 9; print $i++ . PHP_EOL) {};

/*
 * 6. В имеющемся шаблоне сайта заменить статичное меню (ul - li) на генерируемое через PHP.
 * Необходимо представить пункты меню как элементы массива и вывести их циклом.
 * Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать.
 */
// Реализация - в файле menu.php


//8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».
filterCitiesOfRegions($aRegions, 'к');

/*
 * 9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке,
 * производит транслитерацию и замену пробелов на подчеркивания
 * (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).
 */
echo(makeUrl('Привет мир как дела'));